# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: docshub-back
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  individually: true
  patterns:
    - '!**/**'
    - 'utils/**'

functions:
  upload_file:
    handler: upload_file/handler.upload_file
    package: 
      include: 'upload_file/**'
      events:
        - http:
            path: /api/upload-file
            method: post
            cors: true

  download_file:
    handler: download_file/handler.download_file
    package:
      include: 'download_file/**'
      events:
        - http:
            path: /api/download-file
            method: get
            cors: true
  upload_error_handling:
    handler: upload_error_handling/handler.handle_error
    package:
      include: 'upload_error_handling/**'
#      events:
#        - http:
#            path: /api/download-file
#            method: get
#            cors: true
    Properties:
      Environment:
        Variables:
          DEBUG_LOGGING_ENABLED: true
  upload_file_s3:
    handler: upload_file_s3/handler.upload_file_s3
    package:
      include: 'upload_file_s3/**'
#      events:
#        - http:
#            path: /api/download-file
#            method: get
#            cors: true
    Properties:
      Environment:
        Variables:
          DEBUG_LOGGING_ENABLED: true
  upload_success_handling:
    handler: upload_success_handling/handler.handle_success
    package:
      include: 'upload_success_handling/**'
#      events:
#        - http:
#            path: /api/download-file
#            method: get
#            cors: true
    Properties:
      Environment:
        Variables:
          DEBUG_LOGGING_ENABLED: true